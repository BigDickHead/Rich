Auto:
step 1:
apt-get install bridge-utils
apt-get install uml-utilities

===============================================================
step 2:
vim /etc/network/interfaces

auto lo
iface lo inet loopback


/*auto br0*/
/*iface br0 inet dhcp*/
/*bridge_ports eth0 tap0*/
/*bridge_stp off*/
/*bridge_fd 0*/
/*bridge_maxwait 0*/

Or

auto br0
iface br0 inet static
bridge-ports eth0 tap0
bridge-stp off
bridge_fd 0
bridge_maxwait 0
address 192.168.0.107
netmask 255.255.255.0
network 192.168.0.0
broadcast 192.168.0.255
gateway 192.168.0.1

auto eth0
iface eth0 inet manual
up ip link set $IFACE up
up brctl addif br0 $IFACE
down brctl delif br0 $IFACE || true
down ip link set $IFACE down


# If you have many Guest systems, just put tap1, tap2, tap3...configuration to /etc/network/interfaces.
auto tap0
iface tap0 inet manual
up ip link set $IFACE up
up brctl addif br0 $IFACE
down brctl delif br0 $IFACE || true
down ip link set $IFACE down
pre-up /usr/sbin/tunctl -t tap0 -u Richard
#tunctl_user Richard
===============================================================

step 3:
sudo /sbin/ifup tap0
sudo /sbin/ifup br0
OR
/etc/init.d/networking restart

step 4:
usermod -a -G uml-net Richard
newgrp uml-net
OR
chmod o+rw /dev/net/tun             //only once, if host restarted, that will be not work.

===============================================================
step 5:
-boot d    //boot from cdrom
-boot c    //boot from hard disk
NAT:
kvm -m 512 -drive file=winxp.img,cache=writeback,if=virtio -localtime -net nic,model=virtio -net user -smp 2 -redir tcp:3389::3389 -redir tcp:8580::8580 -nographic -soundhw es1370 >/dev/null 2>&1 & ####-vnc 127.0.0.1:0  ###-vnc :0

Bridge:
kvm -m 512 -drive file=winxp.img,cache=writeback,if=virtio -localtime -net nic -net tap,ifname=tap0,script=no -smp 2 -redir tcp:3389::3389 -redir tcp:8580::8580 -nographic -soundhw es1370 >/dev/null 2>&1 & ####-vnc 127.0.0.1:0  ###-vnc :0 ###-net nic,macaddr=52-52-00-66-98-66 -net tap,ifname=tap0,script=no
===============================================================





Manual:
===========================================================================================
# Create a bridge is not just as simple as brctl addbr br0, some extra configurations must be done.
#!/bin/bash

addr="192.168.1.50/24"
gw="192.168.1.1"

echo "remove ip from eth0"
sudo ip addr del $addr dev eth0
sudo ip link set eth0 up

echo "create br0"
sudo brctl addbr br0
echo "add eth0 to br0"
sudo brctl addif br0 eth0

echo "bring up br0"
sudo ip addr add $addr dev br0
sudo ip link set br0 up

echo "set default gateway"
sudo ip route add default via $gw dev br0
===========================================================================================
# Delete a bridge
#!/bin/bash

addr="192.168.1.50/24"
gw="192.168.1.1"

echo "shut down br0"
sudo ip link set br0 down

echo "remove eth0 from br0"
sudo brctl delif br0 eth0
echo "remove br0"
sudo brctl delbr br0

echo "bring up eth0"
sudo ip addr add $addr dev eth0
sudo ip link set eth0 up

echo "set default gateway"
sudo ip route add default via $gw dev eth0
===========================================================================================
# Add tap0 to br0
#!/bin/bash

echo "bring up tap0"
tunctl -b -u Richard -t tap0
sudo ip link set tap0 up
echo "add tap0 to br0"
sudo brctl addif br0 tap0

===========================================================================================
# Del tap0 from br0
#!/bin/bash

echo "remove tap0 from br0"
sudo brctl delif br0 tap0
echo "shut down tap0"
sudo ip link set tap0 down         #//tunctl -d tap0
===========================================================================================







Script
===========================================================================================
#!/bin/bash

if [ $# -ne 1 ]
then
    exit
fi

netstart () {
    addr=`ifconfig | grep -A 1 eth0|grep "inet addr" | cut -d ":" -f 2 |cut -d " " -f 1`
    gw="192.168.0.1"
    echo "remove ip from eth0"
    ip addr del $addr dev eth0
    ip link set eth0 up

    echo "create br0"
    brctl addbr br0
    echo "add eth0 to br0"
    brctl addif br0 eth0

    echo "bring up br0"
    ip addr add $addr dev br0
    ip link set br0 up

    echo "set default gateway"
    ip route add default via $gw dev br0
    route add default gw $gw via
    dhclient br0

    echo "bring up tap0"
    tunctl -b -u Richard -t tap0
    ip link set tap0 up
    echo "add tap0 to br0"
    brctl addif br0 tap0
}


netdown() {
    addr=`ifconfig | grep -A 1 br0|grep "inet addr" | cut -d ":" -f 2 |cut -d " " -f 1`
    gw="192.168.0.1"
    echo "shut down br0"
    ip link set br0 down

    echo "remove eth0 from br0"
    brctl delif br0 eth0
    echo "remove br0"
    brctl delbr br0

    echo "bring up eth0"
    ip addr add $addr dev eth0
    ip link set eth0 up

    echo "set default gateway"
    ip route add default via $gw dev eth0
    dhclient eth0

    echo "remove tap0 from br0"
    brctl delif br0 tap0
    echo "shut down tap0"
    ip link set tap0 down
}

if [ "$1" == up ]
then
    netstart
elif [ "$1" == down ]
then
    netdown
fi
===========================================================================================
