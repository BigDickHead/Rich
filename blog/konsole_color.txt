如何在Linux终端里用Shell和C输出带颜色的文字


1. shell实现方法

       先来讲在shell下，如何实现。用echo命令就可以实现，参看以下例子：

       echo  -e  "\033[32mHello, world!"

       echo命令-e选项的作用是激活终端对反斜线转义符（即\）的解释。引号内\033用于引导非常规字符序列，在这里的作用就是引导设置输出属性，后边的[32m就是将前景色设置为绿色，字母m表示设置的属性类别，数字代表属性值。设置可以单独使用，例如：

       echo -e  "\033[0m"

       这行命令的作用是恢复属性为默认值，也就是说0m设置项用于恢复默认值。

      --------------------------------------------------------------------------

      \033[0m 关闭所有属性
      \033[1m 设置高亮度
      \033[4m 下划线
      \033[5m 闪烁
      \033[7m 反显
      \033[8m 消隐
      \033[30m 至 \33[37m 设置前景色
      \033[40m 至 \33[47m 设置背景色
      \033[nA 光标上移n行
      \033[nB 光标下移n行
      \033[nC 光标右移n行
      \033[nD 光标左移n行
      \033[y;xH设置光标位置
      \033[2J 清屏
      \033[K 清除从光标到行尾的内容
      \033[s 保存光标位置
      \033[u 恢复光标位置
      \033[?25l 隐藏光标
      \033[?25h 显示光标

      --------------------------------------------------------------------------

      各数字所代表的颜色如下：

      字背景颜色范围:40----49
      40:黑
      41:深红
      42:绿
      43:黄色
      44:蓝色
      45:紫色
      46:深绿
      47:白色

      字颜色:30-----------39
      30:黑
      31:红
      32:绿
      33:黄
      34:蓝色
      35:紫色
      36:深绿
      37:白色


      同类的多种设置项可以组合在一起，中间用分号（;）隔开。如下：

      echo -e "\033[20;1H\033[1;4;32mHello,world\033[0m"

      这行命令首先\033[20;1H将光标移动到终端第20行第1列，之后的\033[1;4;32m将文本属性设置为高亮、带下划线且颜色为绿色，然后输出Hello,world；最后\033[0m将终端属性恢复为默认值，这样就不会看到连命令完成后的命令提示符也变了样儿了。


2. C实现方法
#include <stdio.h>
int main()
{
    int i, j;

    for(i=40; i<48; i++)
        for(j=30; j<38; j++)
        {
            printf("\x1b[%d;%dmhello world\n\x1b[0m",i, j);
        }

    return 0;
}



#include <stdio.h>
int main(int argc, const char *argv[])
{
     int color = 32;

    printf("\033[43m\033[36m%dmHello, world.\033[0m", color);
    return 0;
}

:vim:nospell:
